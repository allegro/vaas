# To generate a new data.yaml file run:
# ./manage.py dumpdata cluster.LogicalCluster manager.Probe cluster.Dc cluster.VclTemplate \
# manager.Director manager.Backend cluster.VarnishServer auth.user --format yaml --natural
- fields: {name: cluster1_siteA_test}
  model: cluster.logicalcluster
  pk: 1
- fields: {name: cluster2_siteB_test}
  model: cluster.logicalcluster
  pk: 2
- fields: {name: cluster3_siteA_dev}
  model: cluster.logicalcluster
  pk: 3
- fields: {name: cluster4_siteC_prod}
  model: cluster.logicalcluster
  pk: 4
- fields: {name: First datacenter, symbol: dc1}
  model: cluster.dc
  pk: 1
- fields: {comment: '', content: <VCL/>, name: vagrant_template_3, version: '3.0'}
  model: cluster.vcltemplate
  pk: 1
- fields: {comment: '', content: <VCL/>, name: vagrant_template_4, version: '4.0'}
  model: cluster.vcltemplate
  pk: 2
- fields: {cluster: 1, cluster_weight: 1, dc: 1, enabled: true, hostname: varnish-3,
    ip: 192.168.199.2, port: 6082, secret: edcf6c52-6f93-4d0d-82b9-cd74239146b0,
    template: 1}
  model: cluster.varnishserver
  pk: 1
- fields: {cluster: 2, cluster_weight: 1, dc: 1, enabled: true, hostname: varnish-4,
    ip: 192.168.199.3, port: 6082, secret: edcf6c52-6f93-4d0d-82b9-cd74239146b0,
    template: 2}
  model: cluster.varnishserver
  pk: 2
- fields: {cluster: 2, cluster_weight: 1, dc: 1, enabled: true, hostname: varnish-4.1,
    ip: 192.168.199.4, port: 6082, secret: edcf6c52-6f93-4d0d-82b9-cd74239146b0,
    template: 2}
  model: cluster.varnishserver
  pk: 3
- fields: {expected_response: 200, interval: 3, name: default_probe, threshold: 3,
    timeout: '1', url: /ts.1, window: 5}
  model: manager.probe
  pk: 1
- fields:
    name: 'generic profile'
    description: ''
    between_bytes_timeout: 1
    connect_timeout: 0.3
    first_byte_timeout: 5
    max_connections: 5
  model: manager.timeprofile
  pk: 1
- fields:
    active_active: true
    cluster: [1]
    enabled: true
    hashing_policy: req.url
    mode: random
    name: first_service
    probe: 1
    remove_path: false
    route_expression: /first
    router: req.url
    time_profile: 1
  model: manager.director
  pk: 1
- fields:
    active_active: true
    cluster: [2]
    enabled: true
    hashing_policy: req.url
    mode: round-robin
    name: second_service
    probe: 1
    remove_path: false
    route_expression: second.*
    router: req.http.host
    time_profile: 1
  model: manager.director
  pk: 2
- fields: {address: 192.168.199.10, between_bytes_timeout: '1', connect_timeout: '0.3',
    dc: 1, director: 1, enabled: true, first_byte_timeout: '5', max_connections: 5,
    port: 80, weight: 1, inherit_time_profile: True}
  model: manager.backend
  pk: 1
- fields: {address: 192.168.199.11, between_bytes_timeout: '1', connect_timeout: '0.3',
    dc: 1, director: 1, enabled: true, first_byte_timeout: '5', max_connections: 5,
    port: 80, weight: 1, inherit_time_profile: True}
  model: manager.backend
  pk: 2
- fields: {address: 192.168.199.12, between_bytes_timeout: '1', connect_timeout: '0.3',
    dc: 1, director: 1, enabled: true, first_byte_timeout: '5', max_connections: 5,
    port: 80, weight: 2, inherit_time_profile: True}
  model: manager.backend
  pk: 3
- fields: {address: 192.168.199.13, between_bytes_timeout: '1', connect_timeout: '0.3',
    dc: 1, director: 2, enabled: true, first_byte_timeout: '5', max_connections: 5,
    port: 80, weight: 3, inherit_time_profile: True}
  model: manager.backend
  pk: 4
- fields: {address: 192.168.199.14, between_bytes_timeout: '1', connect_timeout: '0.3',
    dc: 1, director: 2, enabled: true, first_byte_timeout: '5', max_connections: 5,
    port: 80, weight: 4, inherit_time_profile: True}
  model: manager.backend
  pk: 5
- fields: {address: 192.168.199.15, between_bytes_timeout: '1', connect_timeout: '0.3',
    dc: 1, director: 2, enabled: true, first_byte_timeout: '5', max_connections: 5,
    port: 80, weight: 5, inherit_time_profile: True}
  model: manager.backend
  pk: 6
- fields:
    email: admin@vaas.allegrogroup.com
    first_name: ''
    groups: []
    is_active: true
    is_staff: true
    is_superuser: true
    last_name: ''
    # plain text password: admin
    password: pbkdf2_sha256$12000$yxB95qHh91x5$oYW0Jrsb8jLGVo0tKypOPRap/wr+n+3TjkOP6cT9G4o=
    user_permissions: []
    username: admin
  model: auth.user
  pk: 1
- fields: {created: '2014-12-12 12:00:00+00:00', key: vagrant_api_key, user: 1}
  model: tastypie.apikey
  pk: 1
